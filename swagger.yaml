swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # New features demo (1/2) =========================== START
  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: Get all accounts
      description: API for fetching all accounts of user bank
      responses:
        '200':
          description: All accounts of user bank retrieved successully
          schema:
            $ref: '#/definitions/GetAccountsResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: Get all transactions for account
      description: API for fetching all transactions for account of user bank
      parameters:
        - name: accountId
          in: path
          description: The id of account that needs to be fetched the transactions
          required: true
          type: string
      responses:
        '200':
          description: All transactions for account of user bank retrieved successully
          schema:
            $ref: '#/definitions/GetAccountTransactionsResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transactionsPages/{pageNumber}:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: Get all transactions for account per page
      description: API for fetching all transactions for account of user bank, sorted over 30 days per page
      parameters:
        - name: accountId
          in: path
          description: The id of account that needs to be fetched the transactions
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The number of the page that needs to be fetched the transactions
          required: true
          type: integer
      responses:
        '200':
          description: All transactions for account of user bank retrieved successully
          schema:
            $ref: '#/definitions/GetAccountTransactionsResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Page or account not found
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: Get a transaction by id for account
      description: API for fetching a transaction for account of user bank
      parameters:
        - name: accountId
          in: path
          description: The id of account that needs to be fetched the transaction
          required: true
          type: string
        - name: transactionId
          in: path
          description: The id of transaction that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: Transaction by id for account of user bank retrieved successully
          schema:
            $ref: '#/definitions/GetAccountTransactionResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction or account not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: Update a transaction by id for account
      description: API for update a transaction for account of user bank
      parameters:
        - name: accountId
          in: path
          description: The id of account for the transaction that needs to be update
          required: true
          type: string
        - name: transactionId
          in: path
          description: The id of transaction that needs to be update
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/ModifyTransaction'
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/GetAccountTransactionResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction or account not found
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transferTo/{accountId}:
    post:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: Transfer between two accounts
      description: API for transfer between two accounts of user bank
      parameters:
        - name: accountId
          in: path
          description: The id of account that needs to be send the transfer and for the that needs to be the receiver
          required: true
          type: string
        - in: body
          name: body
          description: Transfer transaction
          required: true
          schema:
            $ref: '#/definitions/TransferTransaction'
      responses:
        '200':
          description: All accounts of user bank retrieved successully
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # New features demo (1/2) =========================== END
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  # New features demo (2/2) =========================== START
  DefaultResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  Account:
    type: object
    properties:
      id:
        type: string
      account_number:
        type: string
      type_mame:
        type: string
      balance:
        type: number
        format: float
      currency:
        type: string
  GetAccountsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Account'
  Transactions:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        type_mame:
          type: string
        category:
          type: string
        date:
          type: string
          format: date
        title:
          type: string
        amount:
          type: number
          format: float
  Transaction:
    type: object
    properties:
      id:
        type: string
      type_mame:
        type: string
      category:
        type: string
      date:
        type: string
        format: date
      title:
        type: string
      amount:
        type: number
        format: float
      reason:
        type: string
      note:
        type: string
  ModifyTransaction:
    type: object
    properties:
      category:
        type: string
      reason:
        type: string
      note:
        type: string
  TransferTransaction:
    type: object
    properties:
      type_mame:
        type: string
      category:
        type: string
      date:
        type: string
        format: date
      title:
        type: string
      amount:
        type: number
        format: float
      reason:
        type: string
      note:
        type: string
  GetAccountTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/Transactions'
  GetAccountTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/Transaction'
  # New features demo (2/2) =========================== END
